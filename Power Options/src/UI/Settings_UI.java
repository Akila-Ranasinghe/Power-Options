/*
 * Copyright (c) 2014  Akila Ranasinghe </ SPYD3R-X >
 * All rights reserved.
 * GitHub: https://github.com/SPYD3R-X
 * 03 Oct 2014 07:02:20 PM By AKILA.
 */
package UI;

import java.io.IOException;

/**
 *
 * @author AKILA
 */
public class Settings_UI extends javax.swing.JDialog {

    /**
     * Creates new form Settings_UI
     *
     */
    public static byte btnOpt = 0;

    public Settings_UI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        RadioBtn_ShutDown.setSelected(true);
        CmbBox_ShutDownTime.setEnabled(true);
        CmbBox_RestartTime.setEnabled(false);
        btn_stop.setEnabled(false);

        if (0 == btnOpt) {
            Settings_UI.btn_set.setEnabled(true);
            Settings_UI.btn_stop.setEnabled(false);
        }
        if (1 == btnOpt) {
            Settings_UI.btn_set.setEnabled(false);
            Settings_UI.btn_stop.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btn_set = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        CmbBox_RestartTime = new javax.swing.JComboBox();
        RadioBtn_Restart = new javax.swing.JRadioButton();
        RadioBtn_ShutDown = new javax.swing.JRadioButton();
        CmbBox_ShutDownTime = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btn_stop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("More Settings");
        setAlwaysOnTop(true);
        setResizable(false);

        btn_set.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btn_set.setText("Set");
        btn_set.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_setActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Customized Time");

        CmbBox_RestartTime.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        CmbBox_RestartTime.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "15 sec", "30 sec", "1 min", "15 min", "30 min", "1 hr" }));
        CmbBox_RestartTime.setFocusable(false);

        buttonGroup1.add(RadioBtn_Restart);
        RadioBtn_Restart.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        RadioBtn_Restart.setText("Restart pc after");
        RadioBtn_Restart.setFocusable(false);
        RadioBtn_Restart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioBtn_RestartActionPerformed(evt);
            }
        });

        buttonGroup1.add(RadioBtn_ShutDown);
        RadioBtn_ShutDown.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        RadioBtn_ShutDown.setText("Shutdown pc after");
        RadioBtn_ShutDown.setFocusable(false);
        RadioBtn_ShutDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioBtn_ShutDownActionPerformed(evt);
            }
        });

        CmbBox_ShutDownTime.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        CmbBox_ShutDownTime.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "15 sec", "30 sec", "1 min", "15 min", "30 min", "1 hr" }));
        CmbBox_ShutDownTime.setFocusable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Note"));

        jLabel1.setText("PC will be Shutdown or Restart after at selected time duration.");

        jLabel2.setText("This must executed after press Set button.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_stop.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btn_stop.setText("Stop");
        btn_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_stopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 10, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RadioBtn_ShutDown)
                            .addComponent(RadioBtn_Restart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_stop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CmbBox_ShutDownTime, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CmbBox_RestartTime, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_set, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_set, btn_stop});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(RadioBtn_ShutDown)
                        .addGap(18, 18, 18)
                        .addComponent(RadioBtn_Restart))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CmbBox_ShutDownTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CmbBox_RestartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_set)
                    .addComponent(btn_stop))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_setActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_setActionPerformed

        // Set Power-Opt..
        try {

            int time_shtDwn = Integer.valueOf(CmbBox_ShutDownTime.getSelectedIndex());
            int time_reStr = Integer.valueOf(CmbBox_RestartTime.getSelectedIndex());
            int opt1 = 0;
            int opt2 = 1;
            int opt3 = 2;
            int opt4 = 3;
            int opt5 = 4;
            int opt6 = 5;

            int sec15 = 15;
            int sec30 = 30;
            int min1 = 60;
            int min15 = 900;
            int min30 = 1800;
            int hr1 = 3600;

            if (RadioBtn_ShutDown.isSelected()) { // SHUT-DOWN Opt.
                String execCommand = "shutdown -s -t ";
                Runtime execRunTime = Runtime.getRuntime();

                if (time_shtDwn == opt1) {
                    String cmnd = execCommand + sec15;
                    execRunTime.exec(cmnd);
                }
                if (time_shtDwn == opt2) {
                    String cmnd = execCommand + sec30;
                    execRunTime.exec(cmnd);
                }
                if (time_shtDwn == opt3) {
                    String cmnd = execCommand + min1;
                    execRunTime.exec(cmnd);
                }
                if (time_shtDwn == opt4) {
                    String cmnd = execCommand + min15;
                    execRunTime.exec(cmnd);
                }
                if (time_shtDwn == opt5) {
                    String cmnd = execCommand + min30;
                    execRunTime.exec(cmnd);
                }
                if (time_shtDwn == opt6) {
                    String cmnd = execCommand + hr1;
                    execRunTime.exec(cmnd);
                }

            } else if (RadioBtn_Restart.isSelected()) { // RESTART Opt.

                String execCommand = "shutdown -r -t ";
                Runtime execRunTime = Runtime.getRuntime();

                if (time_reStr == opt1) {
                    String cmnd = execCommand + sec15;
                    execRunTime.exec(cmnd);
                }
                if (time_reStr == opt2) {
                    String cmnd = execCommand + sec30;
                    execRunTime.exec(cmnd);
                }
                if (time_reStr == opt3) {
                    String cmnd = execCommand + min1;
                    execRunTime.exec(cmnd);
                }
                if (time_reStr == opt4) {
                    String cmnd = execCommand + min15;
                    execRunTime.exec(cmnd);
                }
                if (time_reStr == opt5) {
                    String cmnd = execCommand + min30;
                    execRunTime.exec(cmnd);
                }
                if (time_reStr == opt6) {
                    String cmnd = execCommand + hr1;
                    execRunTime.exec(cmnd);
                }
            }

            btn_set.setEnabled(false);
            btn_stop.setEnabled(true);
            btnOpt = 1;

        } catch (NumberFormatException | IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_setActionPerformed

    private void RadioBtn_RestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioBtn_RestartActionPerformed

        CmbBox_RestartTime.setEnabled(true);
        CmbBox_ShutDownTime.setEnabled(false);
    }//GEN-LAST:event_RadioBtn_RestartActionPerformed

    private void RadioBtn_ShutDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioBtn_ShutDownActionPerformed

        CmbBox_ShutDownTime.setEnabled(true);
        CmbBox_RestartTime.setEnabled(false);
    }//GEN-LAST:event_RadioBtn_ShutDownActionPerformed

    private void btn_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_stopActionPerformed

        // STOP Running Power-Opt
        try {
            Runtime r = Runtime.getRuntime();
            r.exec("shutdown -a");
            btn_stop.setEnabled(false);
            btn_set.setEnabled(true);
            btnOpt = 0;
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btn_stopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Settings_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Settings_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Settings_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Settings_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Settings_UI dialog = new Settings_UI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CmbBox_RestartTime;
    private javax.swing.JComboBox CmbBox_ShutDownTime;
    private javax.swing.JRadioButton RadioBtn_Restart;
    private javax.swing.JRadioButton RadioBtn_ShutDown;
    public static javax.swing.JButton btn_set;
    public static javax.swing.JButton btn_stop;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
